package com.spacebattleship;import android.graphics.Rect;import android.view.MotionEvent;import java.util.ArrayList;public class InputController {    Rect up;//button up    Rect down;//button down    Rect shoot;//button shot    Rect laser;//button laser    Rect pause;//button pause    Rect upgradeBody;//button upgrade body    Rect upgradeShield;//button upgrade shield    Rect upgradeCanon;//button upgrade canon    Rect upgradeLaser;//button upgrade laser    /*    Constructor, called by constructor of GamveView class.    After it is called, a new object will be created for the    GameView class to draw buttons and implement functions.     */    InputController(int screenWidth, int screenHeight) {        //Configure the positions of player buttons        int buttonWidth = screenWidth / 16;//the button width depends on the screen width        int buttonHeight = screenHeight / 10;//the button height depends on the screen height        int buttonPadding = screenWidth / 60;//the gap between buttons depends on the screen width        //set the top/left/right/bottom coordinates of buttons        up = new Rect(buttonPadding,//left                screenHeight - buttonHeight*3 - buttonPadding*2,//top                buttonPadding+buttonWidth,//right                screenHeight - buttonHeight*2 - buttonPadding*2);//bottom        down = new Rect(buttonPadding,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                buttonPadding+buttonWidth,//right                screenHeight - buttonHeight - buttonPadding);//bottom        shoot = new Rect(screenWidth-(buttonPadding+buttonWidth)*2,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth-buttonPadding*2-buttonWidth,//right                screenHeight - buttonHeight - buttonPadding);//bottom        laser = new Rect(screenWidth-(buttonPadding+buttonWidth),//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth-buttonPadding,//right                screenHeight - buttonHeight - buttonPadding);//bottom        pause = new Rect(screenWidth - buttonPadding - buttonWidth,//left                buttonPadding,//top                screenWidth - buttonPadding,//right                buttonPadding + buttonHeight);        upgradeBody = new Rect(screenWidth/2 - buttonPadding*3/2 - buttonWidth*2,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth/2 - buttonPadding*3/2 - buttonWidth,//right                screenHeight - buttonHeight - buttonPadding);//bottom        upgradeShield = new Rect(screenWidth/2 - buttonPadding/2 - buttonWidth,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth/2 - buttonPadding/2,//right                screenHeight - buttonHeight - buttonPadding);//bottom        upgradeCanon = new Rect(screenWidth/2 + buttonPadding/2,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth/2 + buttonPadding/2 + buttonWidth,//right                screenHeight - buttonHeight - buttonPadding);//bottom        upgradeLaser = new Rect(screenWidth/2+buttonPadding*3/2+buttonWidth,//left                screenHeight - buttonHeight*2 - buttonPadding,//top                screenWidth/2+buttonPadding*3/2+buttonWidth*2,//right                screenHeight - buttonHeight - buttonPadding);//bottom    }    /*    Make proper implements when the player clicked buttons on the screen    called by onTouchEvent() in GameView class, depends on the button area the player    clicked, it performs prosper implementations     */    public void handleInput(MotionEvent motionEvent,PlayerShip player, GameManager gameManager, SoundManager soundManager){        int pointerCount = motionEvent.getPointerCount();//get touched position        for (int i = 0; i < pointerCount; i++) {            int x = (int) motionEvent.getX(i);            int y = (int) motionEvent.getY(i);            if (gameManager.isPlaying()) {//if the game is in playing status                switch (motionEvent.getAction() & MotionEvent.ACTION_MASK) {                    case MotionEvent.ACTION_DOWN://press down button                        if (up.contains(x, y)) {                            player.setPressingUp(true);//player's ship go up                            player.setPressingDown(false);                        } else if (down.contains(x, y)) {                            player.setPressingDown(true);//player's ship go down                            player.setPressingUp(false);                        } else if (shoot.contains(x, y)) {                            if (player.isCanonReady()) {//check if it is valid                                soundManager.playSound("shoot");//play "shoot" sound                                player.shootCanon();//shoot the canon                            }                        } else if (laser.contains(x, y)) {                            if (player.isLaserReady()) {//check if it is valid                                soundManager.playSound("laser");//play "laser" sound                                player.shootLaser();//shoot the laser                            }                        } else if (pause.contains(x, y)) {                            //switch between pause and play status                            gameManager.switchPlayingStatus();                        }                        break;                    case MotionEvent.ACTION_UP://lift up button                        player.setPressingUp(false);//stop going up                        player.setPressingDown(false);//stop going down                        break;                }            } else {//is not playing                switch (motionEvent.getAction() & MotionEvent.ACTION_MASK) {                    case MotionEvent.ACTION_DOWN:                        if (pause.contains(x, y)) {                            //switch between pause and play status                            gameManager.switchPlayingStatus();                        }                        break;                }            }            //Player could upgrade their ship no matter the game is on pause or not            switch (motionEvent.getAction() & MotionEvent.ACTION_MASK) {                case MotionEvent.ACTION_DOWN:                    if (upgradeBody.contains(x, y)) {                        if (player.getUpgradePoint() > 0) {                            soundManager.playSound("upgrade");//player "upgrade" sound                            player.upgradeBody();//upgrade ship's body                        }                    } else if (upgradeShield.contains(x, y)) {                        if (player.getUpgradePoint() > 0) {                            soundManager.playSound("upgrade");//player "upgrade" sound                            player.upgradeShield();//upgrade ship's shield                        }                    } else if (upgradeCanon.contains(x, y)) {                        if (player.getUpgradePoint() > 0) {                            soundManager.playSound("upgrade");//player "upgrade" sound                            player.upgradeCanon();//upgrade ship's canon                        }                    } else if (upgradeLaser.contains(x, y)) {                        if (player.getUpgradePoint() > 0) {                            soundManager.playSound("upgrade");//player "upgrade" sound                            player.upgradeLaser();//upgrade ship's laser                        }                    }                    break;            }        }    }    /*    return all rect coordinates, called by drawButtonsAndHUD() in GameView class     */    public ArrayList getUpgradeButtons(){        //create an array of buttons for the draw method        ArrayList<Rect> currentButtonList = new ArrayList<>();        currentButtonList.add(upgradeBody);        currentButtonList.add(upgradeShield);        currentButtonList.add(upgradeCanon);        currentButtonList.add(upgradeLaser);        return currentButtonList;    }    //getters    public Rect getUpButton(){        return up;    }    public Rect getDownButton(){        return down;    }    public Rect getPauseButton(){        return pause;    }    public Rect getCanonButton(){        return shoot;    }    public Rect getLaserButton(){        return laser;    }}